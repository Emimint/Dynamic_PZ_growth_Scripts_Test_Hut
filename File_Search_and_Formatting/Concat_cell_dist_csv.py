#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import csv
import sys
import os
import pandas as pd
import numpy as np
import ntpath
import selectFiles

"""
Script to combine various type if info.csv for all leaf or flower samples.

Files are concatenated in a single file for later analysis.

INPUT:
======

- Boundary to center distance info file (generated by MGX via the Cell_distance_boundary_series.py script), XXX_samples_boundary_to_center_distance_info_updated.csv
- Bible file with day or night formation time information

OUTPUT:
=======

A single .csv file with cell distance, speed and relative deformation by boundary formation (BF value) for each timepoint of all the series.

"""

sample_type = "LEAF" #LEAF or FLOWER.
if(sample_type == "FLOWER"):
    path = "/home/user/Desktop/Project_2/210623_FLOWER_DATA_EE" # path to FLOWER DATA
    cell_dist_file = "/home/user/Desktop/Project_2/210623_FLOWER_DATA_EE/All_FLOWER_samples_boundary_to_center_distance_info_updated.csv" # for flower
    bible_file = "/home/user/Desktop/Project_2/210623_FLOWER_DATA_EE/210921_all_flower_samples_bible_file.csv"

if(sample_type == "LEAF"):
    path = "/home/user/Desktop/Project_2/210809_LEAF_DATA_EE" # path to FLOWER DATA
    cell_dist_file = "/home/user/Desktop/Project_2/210809_LEAF_DATA_EE/All_LEAF_samples_boundary_to_center_distance_info_updated.csv" # for flower
    bible_file = "/home/user/Desktop/Project_2/210809_LEAF_DATA_EE/210914_all_leaf_samples_bible_file.csv"
# ========================================

file_list = selectFiles.locateFiles(["Timepoint_BF_value_dictionnary.csv"],path)
file_list.sort()

#file lock bug correction:
for i in file_list:
    if ('lock' in i) :
        file_list.remove(i)

Combined_File = pd.read_csv(cell_dist_file, index_col=None, header=0).dropna()

Combined_File = Combined_File.sort_values(['Sample_number','Primordium','Timepoint'])

Combined_File['Sample_number'] = Combined_File['Sample_number'].astype(str)


# # Add column for Speed and relative deformation calculation:
Combined_File['Cell_distance_Tn_1'] = (Combined_File['Cell_distance'].shift(-1))
Combined_File['Tn_1'] = (Combined_File['Timepoint'].shift(-1))
Combined_File['Speed'] = (Combined_File['Cell_distance_Tn_1']-Combined_File['Cell_distance'])/12
Combined_File['Relative_deformation'] = (Combined_File['Cell_distance_Tn_1']-Combined_File['Cell_distance'])/Combined_File['Cell_distance']

Combined_File = Combined_File[["Sample_number","Timepoint","Tn_1","Primordium","Cell_distance","Cell_distance_Tn_1","Speed","Relative_deformation"]] # renaming the columns

# Remove columns with empty values:
Combined_File.loc[(Combined_File.Timepoint >= Combined_File.Tn_1),'Speed'] = 0
Combined_File.loc[(Combined_File.Timepoint >= Combined_File.Tn_1),'Relative_deformation'] = 0

All_Dict_files = pd.DataFrame()

for file in file_list:
    Csv_Info = pd.read_csv(file, index_col=None, header=0).dropna()
    sample_number = os.path.basename(file).split('_')[0]
    Csv_Info['Sample_number'] = sample_number
    All_Dict_files = pd.concat([All_Dict_files, Csv_Info], sort=False)

All_Dict_files['Sample_number'] = All_Dict_files['Sample_number'].astype(str)
All_Dict_files = All_Dict_files[["Sample_number","Timepoint","Primordium","BF_value"]]

# Creation of the combined BF dictionary file for each sample series:
All_Dict_files.to_csv(os.path.join(path,"ALL_"+sample_type+"_BF_dictionaries.csv"), index=False)

Combined_Csv = pd.merge(Combined_File, All_Dict_files, left_on=['Sample_number','Timepoint','Primordium'], right_on = ['Sample_number','Timepoint','Primordium'])

Bible_File = pd.read_csv(bible_file, usecols=[0,1,4]).dropna()
Bible_File.columns = ['Sample_number','Primordium','Day_or_night']
Bible_File['Sample_number'] = Bible_File['Sample_number'].astype(str)

Combined_Csv = pd.merge(Combined_Csv, Bible_File, on = ['Sample_number','Primordium'])

Combined_Csv = Combined_Csv[["Sample_number","Timepoint","Tn_1","Primordium","Cell_distance","Cell_distance_Tn_1","BF_value","Day_or_night","Speed","Relative_deformation"]]
Combined_Csv.to_csv(cell_dist_file.replace('.csv','_speed_Relative_deformation_updated.csv'), index=False)

